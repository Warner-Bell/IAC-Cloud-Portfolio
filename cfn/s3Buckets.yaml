AWSTemplateFormatVersion: '2010-09-09'
Description: 'CRC Website S3 Buckets.'
Resources:

  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: warnerbell.com
      PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                BlockPublicPolicy: false
                IgnorePublicAcls: false
                RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      LoggingConfiguration:
        DestinationBucketName: !Ref LogsBucket
        LogFilePrefix: AccessLogs/
    #DeletionPolicy: Retain
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref SiteBucket
                - /*
      Bucket: !Ref SiteBucket

  WWWBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: www.warnerbell.com
      AccessControl: Private
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: warnerbell.com
          Protocol: https
    #DeletionPolicy: Retain

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: logs.warnerbell.com
      AccessControl: Private
    #DeletionPolicy: Retain
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref LogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:PutObject'
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource: !Join 
              - ''
              - - 'arn:aws:s3:::'
                - !Ref LogsBucket
                - /*
            Condition:
              ArnLike:
                'aws:SourceArn': !GetAtt
                  - SiteBucket
                  - Arn
              StringEquals:
                'aws:SourceAccount': !Sub '${AWS::AccountId}'
      
Outputs:
  WebsiteURL:
    Value:
      Fn::GetAtt:
      - SiteBucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - SiteBucket
          - DomainName
    Description: Name of S3 bucket to hold website content
