AWSTemplateFormatVersion: '2010-09-09'
Description: 'CRC Website Database, API and Lambda Function.'

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: "ID"
          AttributeType: "S"
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: "ID"
          KeyType: "HASH"
      TableName: "site-views"
      Tags: 
        - Key: "CRC-Stuff"
          Value: "true"
  
  lambdaFunction: 
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: views-lambda-api
      Runtime: python3.8
      Role: arn:aws:iam::198101904822:role/BroadLambda
      Handler: index.lambda_handler
      MemorySize: 256
      Code:
        ZipFile: |
          import json
          import boto3
          dynamodb = boto3.resource('dynamodb')
          table = dynamodb.Table('site-views')
          def lambda_handler(event, context):
              response = table.get_item(Key={
                  'ID':'1'
              })
              views = response['Item']['views']
              views = views + 1
              print(views)
              response = table.put_item(Item={
                      'ID':'1',
                      'views': views
              })
              return views
      Description: views-lambda.
      Tags: 
        - Key: "CRC-Stuff"
          Value: "true"

  LambdaApi:
    Type: AWS::Lambda::Url
    Properties: 
      AuthType: NONE
      Cors:
        AllowMethods: 
          - "*"
        AllowOrigins:
          - "*"
          #- https://warnerbell.com
          #- https://www.warnerbell.com
          #- https://d2xryw30naotei.cloudfront.net
      InvokeMode: BUFFERED
      TargetFunctionArn: !GetAtt lambdaFunction.Arn

  permissionForURLInvoke:
     Type: AWS::Lambda::Permission
     Properties:
       FunctionName: !Ref lambdaFunction
       FunctionUrlAuthType: 'NONE'
       Action: lambda:InvokeFunctionUrl
       Principal: '*'


Outputs:
  
  DynamoDBTableName:
    Value: !Ref DynamoDBTable
  lambdaFunctionARN:
    Value: !GetAtt lambdaFunction.Arn
  # lambdaFunctionUrl:
  #   Value: 
  #     Fn::GetAtt: lambdaFunction.FunctionUrl
  #   Description: "The HTTP URL endpoint for your function."
