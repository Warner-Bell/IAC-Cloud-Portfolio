AWSTemplateFormatVersion: '2010-09-09'
Description: 'CRC Website Database, API and Lambda Function.'

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions: 
        - AttributeName: "ID"
          AttributeType: "S"
      BillingMode: PAY_PER_REQUEST
      KeySchema: 
        - AttributeName: "ID"
          KeyType: "HASH"
      TableName: "site-views"
      Tags: 
        - Key: "CRC-Stuff"
          Value: "true"
  
  LambdaFunction: 
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: views-lambda-api
      Runtime: python3.8
      Role: arn:aws:iam::198101904822:role/BroadLambda
      Handler: index.handler
      Code:
        ZipFile: |
          import json
          import boto3
          dynamodb = boto3.resource('dynamodb')
          table = dynamodb.Table('site-views')
          def lambda_handler(event, context):
              response = table.get_item(Key={
                  'ID':'0'
              })
              views = response['Item']['views']
              views = views + 1
              print(views)
              response = table.put_item(Item={
                      'ID':'0',
                      'views': views
              })
              return views
      Description: Invoke a function during stack creation.
      TracingConfig:
        Mode: Active
      Tags: 
        - Key: "CRC-Stuff"
          Value: "true"

  APIGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Views API

  APIEndpoint:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt APIGatewayRestApi.RootResourceId
      PathPart: views
      RestApiId: !Ref APIGatewayRestApi

  APIMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
      ResourceId: !Ref APIEndpoint
      RestApiId: !Ref APIGatewayRestApi
      MethodResponses:
        - StatusCode: '200'


  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${APIGatewayRestApi}/*/GET/views

Outputs:
  APIEndpointURL:
    Value:
      Fn::Join:
        - ""
        - - "https://"
          - !Ref APIGatewayRestApi
          - ".execute-api."
          - !Ref AWS::Region
  DynamoDBTableName:
    Value: !Ref DynamoDBTable
  LambdaFunctionARN:
    Value: !GetAtt LambdaFunction.Arn
