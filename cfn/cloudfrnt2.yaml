AWSTemplateFormatVersion: '2010-09-09'
Description: 'CRC Website ACM Cert. and CloudFront Distro.'

Resources:
  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: warnerbell.com
      SubjectAlternativeNames: 
        - "warnerbell.com"
        - "www.warnerbell.com"
      DomainValidationOptions:
        - DomainName: warnerbell.com
          HostedZoneId: Z0507821205XVUTOQ9OO2
        - DomainName: www.warnerbell.com
          HostedZoneId: Z0507821205XVUTOQ9OO2
      ValidationMethod: DNS

  OriginAccessControl:
    Type: 'AWS::CloudFront::OriginAccessControl'
    Properties:
      OriginAccessControlConfig:
        Description: 'Origin Access Control for Static Site'
        Name: 'OAC'
        OriginAccessControlOriginType: 's3'
        SigningBehavior: 'always'
        SigningProtocol: 'sigv4'

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        PriceClass: PriceClass_100
        Aliases:
          - warnerbell.com
          - www.warnerbell.com
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: True
          TargetOriginId: warnerbell.com.s3-website-us-east-1.amazonaws.com
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        IPV6Enabled: true
        Origins:
          - DomainName: warnerbell.com.s3-website-us-east-1.amazonaws.com
            Id: warnerbell.com.s3-website-us-east-1.amazonaws.com
            OriginAccessControl:
              Id: !Ref OriginAccessControl
            CustomOriginConfig:
              HTTPPort: "80"
              HTTPSPort: "443"
              OriginProtocolPolicy: http-only
              OriginSSLProtocols: 
                - TLSv1.2
        ViewerCertificate:
          AcmCertificateArn: !Ref Certificate
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Sub "warnerbell.com.s3-website-us-east-1.amazonaws.com"
      PolicyDocument:
        Statement:
          - Sid: "Grant CloudFront Origin Access Control"
            Effect: "Allow"
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::warnerbell.com.s3-website-us-east-1.amazonaws.com/*"
            Condition:
              StringEquals:
                "aws:PrincipalOrgID": !GetAtt [OriginAccessControl, Id]

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: "warnerbell.com."
      RecordSets:
      - Name: "warnerbell.com"
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - Distribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
      - Name: "www.warnerbell.com"
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - Distribution
            - DomainName
          EvaluateTargetHealth: false
          HostedZoneId: Z2FDTNDATAQYW2
    DependsOn: 
      - Distribution

Outputs:
  CertificateArn:
    Description: Issued certificate
    Value:
      Ref: Certificate
  CloudFrontDistribution:
    Description: CloudFront distribution
    Value:
      Fn::GetAtt:
      - Distribution
      - DomainName
  OriginAccessControlID:
    Description: Origin Access Control ID
    Value: !Ref OriginAccessControl
